<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="5" passed="4">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="23782" started-at="2018-07-16T12:16:57Z" finished-at="2018-07-16T12:17:21Z">
    <groups>
    </groups>
    <test name="ExampleTest" duration-ms="23782" started-at="2018-07-16T12:16:57Z" finished-at="2018-07-16T12:17:21Z">
      <class name="Flows.LoginLogout">
        <test-method status="PASS" signature="InitializeTest()[pri:0, instance:Flows.LoginLogout@73ad2d6]" name="InitializeTest" is-config="true" duration-ms="2746" started-at="2018-07-16T12:16:57Z" finished-at="2018-07-16T12:17:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InitializeTest -->
        <test-method status="PASS" signature="DemoQA()[pri:0, instance:Flows.LoginLogout@73ad2d6]" name="DemoQA" duration-ms="6940" started-at="2018-07-16T12:17:00Z" finished-at="2018-07-16T12:17:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DemoQA -->
        <test-method status="PASS" signature="InitializeTest()[pri:0, instance:Flows.LoginLogout@73ad2d6]" name="InitializeTest" is-config="true" duration-ms="1569" started-at="2018-07-16T12:17:07Z" finished-at="2018-07-16T12:17:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InitializeTest -->
        <test-method status="PASS" signature="EndTest()[pri:0, instance:Flows.LoginLogout@73ad2d6]" name="EndTest" is-config="true" duration-ms="0" started-at="2018-07-16T12:17:07Z" finished-at="2018-07-16T12:17:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EndTest -->
        <test-method status="PASS" signature="DemoQARegister()[pri:0, instance:Flows.LoginLogout@73ad2d6]" name="DemoQARegister" duration-ms="12365" started-at="2018-07-16T12:17:09Z" finished-at="2018-07-16T12:17:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DemoQARegister -->
        <test-method status="PASS" signature="EndTest()[pri:0, instance:Flows.LoginLogout@73ad2d6]" name="EndTest" is-config="true" duration-ms="0" started-at="2018-07-16T12:17:21Z" finished-at="2018-07-16T12:17:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EndTest -->
      </class> <!-- Flows.LoginLogout -->
      <class name="Flows.LoginLogout2">
        <test-method status="FAIL" signature="FirstTestCase()[pri:0, instance:Flows.LoginLogout2@7085bdee]" name="FirstTestCase" duration-ms="131" started-at="2018-07-16T12:17:21Z" finished-at="2018-07-16T12:17:21Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Assertion Inside Catch expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Assertion Inside Catch expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at Keywords.KeywordRepository.loadURL(KeywordRepository.java:104)
at Flows.LoginLogout2.FirstTestCase(LoginLogout2.java:26)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FirstTestCase -->
        <test-method status="PASS" signature="ThirdTestCase()[pri:0, instance:Flows.LoginLogout2@7085bdee]" name="ThirdTestCase" duration-ms="0" started-at="2018-07-16T12:17:21Z" finished-at="2018-07-16T12:17:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ThirdTestCase -->
        <test-method status="PASS" signature="EndTest()[pri:0, instance:Flows.LoginLogout2@7085bdee]" name="EndTest" is-config="true" duration-ms="0" started-at="2018-07-16T12:17:21Z" finished-at="2018-07-16T12:17:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EndTest -->
        <test-method status="PASS" signature="EndTest()[pri:0, instance:Flows.LoginLogout2@7085bdee]" name="EndTest" is-config="true" duration-ms="0" started-at="2018-07-16T12:17:21Z" finished-at="2018-07-16T12:17:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EndTest -->
        <test-method status="PASS" signature="EndTest()[pri:0, instance:Flows.LoginLogout2@7085bdee]" name="EndTest" is-config="true" duration-ms="0" started-at="2018-07-16T12:17:21Z" finished-at="2018-07-16T12:17:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EndTest -->
        <test-method status="PASS" signature="SecondTestCase()[pri:0, instance:Flows.LoginLogout2@7085bdee]" name="SecondTestCase" duration-ms="0" started-at="2018-07-16T12:17:21Z" finished-at="2018-07-16T12:17:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SecondTestCase -->
      </class> <!-- Flows.LoginLogout2 -->
    </test> <!-- ExampleTest -->
  </suite> <!-- Suite -->
</testng-results>
